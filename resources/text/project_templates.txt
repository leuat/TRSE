
AMIGA; Amiga 500 sample project; amiga_general; <h2>Simple Amiga 500 project setup.</h2>
AMSTRADCPC; Amstrad CPC sample project; amstradcpc_general; <h2>Simple Amstrad CPC that displays an image.</h2>
SPECTRUM; ZX Spectrum sample project; spectrum_general; <h2>ZX Spectrum project template that displays an image and plays some music.</h2>
APPLEII; Apple II sample project; appleii_general; <h2>Simple Apple II Hello world" sample program.</h2>
ATARI800; Atari 800 hello world project; atari800_general; <h2>Atari 800 "Hello world" sample program</h2>
ATARI2600; ATARI 2600 Sample project; atari2600_general; <h2>Simple atari 2600 project setup.</h2>
ATARI520ST; Atari 520 ST Sample project; atari520st_general; <h2>Simple Atari 520 ST project setup.</h2>
BBCM; BBC Micro sample project; bbcm_general; <h2>Simple BBC Micro sample program that displays an image.</h2>
BBCM; BBC Micro disk demo project; bbcm_disk; <h2>BBC Micro sample solution that loads effects from disk and executes them all while playing music in an IRQ handler.</h2>
C128; C128 empty project; c128_text; <h2>Small Commodore C128 40-column project</h2><p>A small sample project for the C128 that prints out some text to the screen.
C128; C128 80 column project; c128_general; <h2>Small Commodore C128 80-column project</h2><p>A small sample project for the C128 that serves as a starting point.
C64; Empty C64 project; c64_general; <h2>Empty C64 project</h2><p>Create an empty C64 project.
C64; Simple C64 project; c64_general2; <h2>Main C64 project</h2><p>Create a small C64 project with a SID file, a raster loop and a custom charset.
C64; Advanced C64 game project; c64_advanced_game; <h2>C64 game project</h2><p>Sets up a full-sized game project with music, an intro screen with a scroller an image, and a smalle game with a level renderer, player movement and enemy placement.
C64; C64 cartridge project; c64_crt; <h2>C64 16kb cartridge project</h2><p>A simple setup that compiles to a 16kb crt program. <p>Exomizer must be turned on in order for this project to compile!
C64; C64 disk project; c64_disk; <h2>C64 disk project</h2><p>A sample project that loads and displays two images from disk. The disk contents are defined in the d64.paw file.
C64; C64 demo from disk template; c64_disk_demo; <h2>C64 disk demo project</h2><p>This project template will set up a c64 demo system that loads compressed demo parts from disk and manages them.
GAMEBOY; Gameboy game project; gameboy_game; <h2>Small Gameboy sample project</h2><p>Sets up a Gameboy game project that renders a movable sprite in a collidable level. Charset, tiles, metatiles, level and sprites are included.
MEGA65; MEGA65 hello world project; mega65_helloworld; <h2>MEGA 65 "Hello world" sample program</h2>
NES; NES sample project; nes_general; <h2>Small NES sample project</h2><p>Sets up a NES project with a main source file, tile ROM image file and music.
SNES; SNES sample game; snes_game; <h2>Advanced SNES game sample project</h2><p>Sets up a SNES project with a basic setup for a game: background tiles, sprites, meta tiles, level editor, music player, sprite control.
OK64; OK64 sample project; ok64_general; <h2>OK64 sample project with SID music, an image and some circles.</h2><p>The OK64 is a MOS6502-based "fake" computer designed by the TRSE team. The OK64 supports VGA-like graphics with 1mb ram, a 1 mhz MOS6502 with 64kb program ram and a SID chip.<p>The OK64 emulator is included with TRSE, and works out-of-the-box.
PET; Commodore PET project; pet_general; <h2>Small Commodore PET project</h2><p>A small sample project for the commodore PET that displays some random text on the screen.
PLUS4; Empty Commodore PLUS4 project; plus4_general; <h2>Small Commodore PLUS4 project</h2><p>A small sample project for the commodore PLUS that displays text.
VIC20; VBM blank project; vic20_vbmblank; <h2>VBM blank project</h2><p>Ready to use Vic Bitmap Mode project with zero page pointers, project files and two text fonts.</p>
VIC20; VBM inertia project; vic20_inertia; <h2>VBM spaceship inertia project</h2><p>Ready to use Vic Bitmap Mode project with a sapceship sprite controlled by the player, moving with inertia smoothly around the screen.</p>
VIC20; VBM platformer project; vic20_platform; <h2>VBM platformer project</h2><p>Ready to use Vic Bitmap Mode project with a platform game engine with ladders, jumps, solids and platforms to run around.</p>
VIC20; VBM 32K cartridge; vic20_vbm32kcart; <h2>Vic 20 VBM 32k cartridge project</h2><p>Vic 20 project set up with VBM ready to use as an 32K cartidge at addressses $2000, $4000, $6000 and $A000.</p>
VIC20; Unexpanded Vic; vic20_unexp; <h2>Unexpanded Vic 20 project</h2><p>Vic 20 project with a basic set up ready to use.</p>
X86; X86 8086 CGA sample project; x86_cga_general; <h2>X86 8086 CGA sample project with sprites and an image.</h2><p>NB: The X86 compiler is still very much in beta, and is considered pre-alpha / WIP until TRSE 0.14!
VZ200; VZ200 blank project; vz200_general; <h2>Generic VZ200 sample project that displays an included image.</h2>
TRS80COCO; TRS80 COCO3 empty project; coco3_clean; <h2>Empty coco3 sample project that prints a string to the screen.</h2>
TRS80COCO; TRS80 COCO3 image project; coco3_image; <h2>Simple project that displays a compressed image and plots some pixels.</h2>
TVC; TVC image project; tvc_image; <h2>Simple project that displays a compressed image.</h2>
TIM; TIM-001 empty project; tim_general; <h2>Simple project that displays some text.</h2>
TIM; TIM-001 tiles project; tim_tiles; <h2>Project that displays some moving tiles.</h2>
THOMSON; Thomson MO5 image project; thomson_image; <h2>Simple project that displays a compressed image.</h2>
