unit Strings;
var
	teststr1: string = "HEISANN";
	
@ifdef C64
	teststr2: cstring = "HEISANN DU";
@endif

procedure Test1();
begin
	Vars::text := "T1:";
	if (length(teststr1)=7) then Common::PASS() else Common::FAIL();
end;

@ifdef C64
procedure Test2();
begin
	Vars::text := "T2:";
	if (sizeof(teststr2)=10) then Common::PASS() else Common::FAIL();
end;
procedure Test3();
begin
	Vars::p1 := $4000;
	Vars::p1[4] :='A';
	Vars::text := "T3:";
	if (Vars::p1[4]='A') then Common::PASS() else Common::FAIL();
end;

@endif

procedure TestLst1();
begin
	Vars::text := "T4:";
	Vars::v1:=1;

	Vars::p1 := Vars::strLst[1];
	if (Vars::p1[1]='2') then Common::PASS() else Common::FAIL();
end;

procedure TestLst2();
begin
	Vars::text := "T5:";
	Vars::p1 := Vars::strLst[2];
	if (Vars::p1[1]=75) then Common::PASS() else Common::FAIL();
end;

// Copy string directly to list
procedure TestLst3();
begin
	Vars::text := "T6:";
	asm(";here2");
	Vars::strLst[2]:="DE";
	Vars::p1 := Vars::strLst[2];
	if (Vars::p1[1]='E') then Common::PASS() else Common::FAIL();
end;

// Setting a pointer to string
procedure TestLst4();
begin
	Vars::text := "T7:";
	Vars::p1 := "MY";
	if (Vars::p1[1]='Y') then Common::PASS() else Common::FAIL();
end;


//--------------------------------------------------------------------------------------------
/* MAIN PROGRAM */
procedure Exec();
begin
	Common::Initialise("STRINGS");
	@ifndef X86
	Test1();
	@endif
	@ifdef C64
	Test2();
	Test3();
	@endif
	TestLst1();
	TestLst2();
	TestLst3();
	TestLst4();
	
	Common::WaitABit();
end;

end.